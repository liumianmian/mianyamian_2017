5月剩余5319分钟 - 11天


1，面向对象学习
	1，设计模式（11种）
	2，动手实践？？
	3，静态属性和静态方法判断
		* 为了实现全部实例同时共享同一份数据变更
		* 比如：防止一个实例修改了某个公共属性，其他实例仍用旧数据
	4，关键词理解
		* final 		| 子类不允许重写父类方法
		* extends		| ps:接口可以继承接口
		* interface		| 接口，方法不需要实现
		* implements	| 接口，子类必须实现
		* abstarct
	5，3要素
		* 封装
		* 继承
		* 抽象
			1，满足介于接口类和普通类之间的需求
			2，需要实现一半方法和不需要实现的方法
			3，比如：人和动物都需要呼吸，但人和动物不同的吃法。
			
		* 多态		
		-------------------------------------------------------------------------------
		多态存在的三个条件:

			1、有继承关系　　
			2、子类重写父类方法　　
			3、父类引用指向子类对象
			补充一下第二点，既然多态存在必须要有“子类重写父类方法”这一条件，那么以下三种类型的方法是没有办法表现出多态特性的（因为不能被重写）：

			1、static方法，因为被static修饰的方法是属于类的，而不是属于实例的
			2、final方法，因为被final修饰的方法无法被子类重写	3、private方法和protected方法，前者是因为被private修饰的方法对子类不可见，后者是因为尽管被protected修饰的方法可以被子类见到，也可以被子类重写，但是它是无法被外部所引用的，一个不能被外部引用的方法，怎么能谈多态呢
		-------------------------------------------------------------------------------
	
	6，魔术方法
		* __invoke 	| __tostring 		- echo $obj(1); echo $obj;
		* __call 	| __callStatic		- $obj->adb();
		* __get 	| __set				- $obj->setname = 'hahaha'
		* __clone
		
		
2，MYSQL
	> 推荐大家看一本书叫做 "高性能Mysql"

	> 性能调优
		1，字段，长度，基础知识
		2，索引优化
		3，连表查询
		
	> 5.7版本新增功能
		1，支持json格式
		2，支持多源复制
		3，支持重启数据库后内存数据导入导出
		4，支持动态修改innodb的缓存大小，5.6之前必须重启
	
3，熟悉PHP框架
	1，安装TP，Symfony，Laravel，CodeIgniter，YII
	
4，开源缓存NOSQL
	1，Memcached、Redis、Vanish、MongoDB等

5，动手实践一个基础游戏框架
	1，入口
	2，路由
	3，逻辑、模块
	4，第三方库
	5，全局配置
	
6，高并发，分布式，高性能设计（性能问题？）
	参考：PHP性能优化方案.md

	
-----------------知识点----------------------------
SOAP
RESTful

协议区别

--------------------------------------------

RESTful 实践
> 核心是面向资源

1，返回json结构
2，标准的header头部状态设置（xsolla实现方式）


